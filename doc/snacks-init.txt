*snacks-init.txt*                                                  snacks.nvim

==============================================================================
Table of Contents                              *snacks-init-table-of-contents*

1. Setup                                                   |snacks-init-setup|
2. Config                                                 |snacks-init-config|
3. Types                                                   |snacks-init-types|
4. Module                                                 |snacks-init-module|
  - Snacks.config.example()       |snacks-init-module-snacks.config.example()|
  - Snacks.config.get()               |snacks-init-module-snacks.config.get()|
  - Snacks.config.style()           |snacks-init-module-snacks.config.style()|
  - Snacks.setup()                         |snacks-init-module-snacks.setup()|

==============================================================================
1. Setup                                                   *snacks-init-setup*

>lua
    -- lazy.nvim
    {
      "folke/snacks.nvim",
      opts = {
        init = {
          -- your init configuration comes here
          -- or leave it empty to use the default settings
          -- refer to the configuration section below
        }
      }
    }
<


==============================================================================
2. Config                                                 *snacks-init-config*

>lua
    ---@class snacks.Config
    ---@field animate? snacks.animate.Config
    ---@field bigfile? snacks.bigfile.Config
    ---@field dashboard? snacks.dashboard.Config
    ---@field dim? snacks.dim.Config
    ---@field gitbrowse? snacks.gitbrowse.Config
    ---@field indent? snacks.indent.Config
    ---@field lazygit? snacks.lazygit.Config
    ---@field notifier? snacks.notifier.Config
    ---@field profiler? snacks.profiler.Config
    ---@field quickfile? snacks.quickfile.Config
    ---@field scope? snacks.scope.Config
    ---@field scratch? snacks.scratch.Config
    ---@field statuscolumn? snacks.statuscolumn.Config
    ---@field terminal? snacks.terminal.Config
    ---@field toggle? snacks.toggle.Config
    ---@field win? snacks.win.Config
    ---@field words? snacks.words.Config
    ---@field zen? snacks.zen.Config
    ---@field styles? table<string, snacks.win.Config>
    {
      bigfile = { enabled = false },
      dashboard = { enabled = false },
      indent = { enabled = false },
      notifier = { enabled = false },
      quickfile = { enabled = false },
      statuscolumn = { enabled = false },
      styles = {},
      words = { enabled = false },
    }
<


==============================================================================
3. Types                                                   *snacks-init-types*

>lua
    ---@class snacks.Config.base
    ---@field example? string
    ---@field config? fun(opts: table, defaults: table)
<


==============================================================================
4. Module                                                 *snacks-init-module*


`Snacks.config.example()`                            *Snacks.config.example()*

Get an example config from the docs/examples directory.

>lua
    ---@param snack string
    ---@param name string
    ---@param opts? table
    Snacks.config.example(snack, name, opts)
<


`Snacks.config.get()`                                    *Snacks.config.get()*

>lua
    ---@generic T: table
    ---@param snack string
    ---@param defaults T
    ---@param ... T[]
    ---@return T
    Snacks.config.get(snack, defaults, ...)
<


`Snacks.config.style()`                                *Snacks.config.style()*

Register a new window style config.

>lua
    ---@param name string
    ---@param defaults snacks.win.Config
    Snacks.config.style(name, defaults)
<


`Snacks.setup()`                                              *Snacks.setup()*

>lua
    ---@param opts snacks.Config?
    Snacks.setup(opts)
<

Generated by panvimdoc <https://github.com/kdheepak/panvimdoc>

vim:tw=78:ts=8:noet:ft=help:norl:
